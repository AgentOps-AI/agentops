name: Integration Tests - Examples

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'examples/**/*.py'
      - 'tests/integration/test_examples.py'
      - 'agentops/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'examples/**/*.py'
      - 'tests/integration/test_examples.py'
      - 'agentops/**'
  workflow_dispatch:
    inputs:
      specific_file:
        description: 'Specific example file to test (optional)'
        required: false
        type: string

jobs:
  test-examples:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-timeout requests
        
        # Install the package in editable mode
        pip install -e .
        
        # Install common example dependencies
        pip install openai anthropic langchain litellm
    
    - name: Run integration tests
      env:
        AGENTOPS_API_KEY: ${{ secrets.AGENTOPS_API_KEY }}
        # Mock API keys for examples (they won't actually make real API calls in tests)
        OPENAI_API_KEY: "test-openai-key"
        ANTHROPIC_API_KEY: "test-anthropic-key"
      run: |
        if [ -n "${{ github.event.inputs.specific_file }}" ]; then
          echo "Testing specific file: ${{ github.event.inputs.specific_file }}"
          pytest tests/integration/test_examples.py -v -k "${{ github.event.inputs.specific_file }}"
        else
          echo "Running all example integration tests"
          pytest tests/integration/test_examples.py -v --tb=short
        fi
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          session_*_debug.json
          .pytest_cache/
    
    - name: Summary
      if: always()
      run: |
        echo "## Integration Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "Python Version: ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
        echo "Test Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

  test-examples-minimal:
    # A minimal test job that runs only on specific examples for quick CI
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install minimal dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-timeout requests
        pip install -e .
        pip install openai  # Just test OpenAI examples for quick CI
    
    - name: Run minimal integration tests
      env:
        AGENTOPS_API_KEY: ${{ secrets.AGENTOPS_API_KEY }}
        OPENAI_API_KEY: "test-openai-key"
      run: |
        # Test just a few quick examples
        pytest tests/integration/test_examples.py -v -k "openai_example_sync or basic_usage" --tb=short