name: Test Notebooks
on:
  push:
    branches: [ main, automate-notebook-testing ]
  pull_request:
    branches: [ main, automate-notebook-testing ]
jobs:
  test-notebooks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8']
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U jupyter
    - name: Create .env file
      run: |
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
        echo "AGENTOPS_API_KEY=${{ secrets.AGENTOPS_API_KEY }}" >> .env
        echo "CO_API_KEY=${{ secrets.CO_API_KEY }}" >> .env
        echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> .env
        echo "SERPER_API_KEY=${{ secrets.SERPER_API_KEY }}" >> .env
    - name: Run notebooks and check for errors
      run: |
        mkdir -p logs
        exit_code=0
        for notebook in examples/*.ipynb; do
          notebook_name=$(basename "$notebook" .ipynb)
          agentops_log="logs/agentops-${notebook}.log"
          
          # Run the notebook
          jupyter execute "$notebook"
          
          # If agentops.log was created, move and rename it
          if [ -f agentops.log ]; then
            mv agentops.log "$agentops_log"
            
            # Check agentops log for errors or warnings
            if grep -E "ERROR|WARNING" "$agentops_log"; then
              echo "Errors or warnings found in $agentops_log for Python ${{ matrix.python-version }}"
              exit_code=1
            else
              echo "No errors or warnings found in $agentops_log for Python ${{ matrix.python-version }}"
            fi
          else
            echo "No agentops.log generated for $notebook_name"
          fi
        done
        exit $exit_code

    - name: Upload logs as artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: notebook-logs-${{ matrix.python-version }}
        path: logs/*.log
        if-no-files-found: warn